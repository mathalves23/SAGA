# ========================
# SAGA - Nginx Configuration
# Web Application Firewall & Reverse Proxy
# ========================

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Otimizações de performance
worker_rlimit_nofile 65535;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    # ========================
    # CONFIGURAÇÕES BÁSICAS
    # ========================
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logs estruturados
    log_format main_ext '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for" '
                        '"$host" sn="$server_name" '
                        'rt=$request_time '
                        'ua="$upstream_addr" us="$upstream_status" '
                        'ut="$upstream_response_time" ul="$upstream_response_length" '
                        'cs=$upstream_cache_status';
    
    access_log /var/log/nginx/access.log main_ext;
    
    # ========================
    # OTIMIZAÇÕES DE PERFORMANCE
    # ========================
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 20M;
    
    # Compressão
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # ========================
    # RATE LIMITING ZONES
    # ========================
    limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=api:10m rate=30r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=1r/s;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=2r/s;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    
    # ========================
    # UPSTREAM BACKENDS
    # ========================
    upstream saga_backend {
        least_conn;
        server backend:8080 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    # ========================
    # SECURITY HEADERS MAP
    # ========================
    map $sent_http_content_type $security_headers {
        ~*text/html "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' wss: https:; frame-ancestors 'none'; base-uri 'self'; form-action 'self'";
    }
    
    # ========================
    # MAIN SERVER - FRONTEND
    # ========================
    server {
        listen 80;
        listen [::]:80;
        server_name saga.com www.saga.com localhost;
        
        # Redirect HTTP to HTTPS in production
        # return 301 https://$server_name$request_uri;
        
        # For development, serve directly
        root /usr/share/nginx/html;
        index index.html;
        
        # ========================
        # SECURITY HEADERS
        # ========================
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
        add_header Content-Security-Policy $security_headers always;
        
        # HSTS for HTTPS (enable in production)
        # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        
        # ========================
        # WAF RULES
        # ========================
        # Block suspicious user agents
        if ($http_user_agent ~* (sqlmap|nmap|nikto|dirbuster|gobuster|masscan|nessus|openvas|w3af|burp|zap)) {
            return 444;
        }
        
        # Block common attack patterns
        if ($request_uri ~* (\<|%3C).*script.*(\>|%3E)) {
            return 444;
        }
        
        if ($request_uri ~* (union.*select|select.*from|insert.*into|delete.*from)) {
            return 444;
        }
        
        if ($request_uri ~* (\.\.\/|\.\.\\|\.\.\%2f|\.\.\%5c)) {
            return 444;
        }
        
        # Block file extensions
        location ~* \.(php|asp|aspx|jsp|cgi|sh|bat|exe|dll)$ {
            return 444;
        }
        
        # ========================
        # CONNECTION LIMITS
        # ========================
        limit_conn conn_limit_per_ip 20;
        
        # ========================
        # STATIC FILES
        # ========================
        location / {
            limit_req zone=general burst=20 nodelay;
            try_files $uri $uri/ /index.html;
            
            # Cache static assets
            location ~* \.(css|js|ico|png|jpg|jpeg|gif|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
                add_header X-Content-Type-Options "nosniff";
            }
        }
        
        # ========================
        # API PROXY
        # ========================
        location /api/ {
            limit_req zone=api burst=50 nodelay;
            
            # WAF for API endpoints
            if ($request_method !~ ^(GET|POST|PUT|DELETE|OPTIONS)$) {
                return 405;
            }
            
            proxy_pass http://saga_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
        }
        
        # ========================
        # AUTH ENDPOINTS (STRICT)
        # ========================
        location /api/auth/ {
            limit_req zone=auth burst=5 nodelay;
            
            # Additional security for auth
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '$http_origin' always;
                add_header 'Access-Control-Allow-Methods' 'POST, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;
                add_header 'Access-Control-Max-Age' 1728000 always;
                return 204;
            }
            
            proxy_pass http://saga_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # ========================
        # HEALTH CHECK
        # ========================
        location /health {
            access_log off;
            return 200 "OK\n";
            add_header Content-Type text/plain;
        }
        
        # ========================
        # MONITORING
        # ========================
        location /nginx-status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.16.0.0/12;
            deny all;
        }
        
        # ========================
        # DENY ACCESS TO SENSITIVE FILES
        # ========================
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        location ~* \.(env|gitignore|htaccess|htpasswd)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
    
    # ========================
    # API SERVER (PRODUCTION)
    # ========================
    server {
        listen 8080;
        server_name api.saga.com api-saga.com;
        
        # Security headers
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        # Rate limiting
        limit_conn conn_limit_per_ip 10;
        
        location / {
            limit_req zone=api burst=100 nodelay;
            
            proxy_pass http://saga_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
    
    # ========================
    # SSL CONFIGURATION (PRODUCTION)
    # ========================
    # server {
    #     listen 443 ssl http2;
    #     listen [::]:443 ssl http2;
    #     server_name saga.com www.saga.com;
    #     
    #     ssl_certificate /etc/ssl/certs/saga.com.crt;
    #     ssl_certificate_key /etc/ssl/private/saga.com.key;
    #     
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     
    #     ssl_session_cache shared:SSL:10m;
    #     ssl_session_timeout 10m;
    #     
    #     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    #     
    #     # Include the same configuration as HTTP server
    #     include /etc/nginx/conf.d/common.conf;
    # }
} 