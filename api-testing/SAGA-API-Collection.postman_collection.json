{
  "info": {
    "name": "SAGA API - Complete Collection",
    "description": "Cole√ß√£o completa de testes para APIs da aplica√ß√£o SAGA - Sistema de Gerenciamento de Treinos",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{jwt_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8080",
      "type": "string"
    },
    {
      "key": "jwt_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "test_email",
      "value": "test@saga.com",
      "type": "string"
    },
    {
      "key": "test_password",
      "value": "Test123!@#",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "üîê Autentica√ß√£o",
      "item": [
        {
          "name": "Registro de Usu√°rio",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Usu√°rio Teste\",\n  \"email\": \"{{test_email}}\",\n  \"password\": \"{{test_password}}\",\n  \"confirmPassword\": \"{{test_password}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/signup",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "signup"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code √© 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Resposta cont√©m token', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('token');",
                  "    pm.globals.set('jwt_token', responseJson.token);",
                  "});",
                  "",
                  "pm.test('Resposta cont√©m dados do usu√°rio', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.user).to.have.property('email');",
                  "    pm.expect(responseJson.user.email).to.eql(pm.variables.get('test_email'));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{test_email}}\",\n  \"password\": \"{{test_password}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/signin",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "signin"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code √© 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Resposta cont√©m token JWT', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('token');",
                  "    pm.globals.set('jwt_token', responseJson.token);",
                  "});",
                  "",
                  "pm.test('Token JWT tem formato v√°lido', function () {",
                  "    const responseJson = pm.response.json();",
                  "    const tokenParts = responseJson.token.split('.');",
                  "    pm.expect(tokenParts).to.have.length(3);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Recupera√ß√£o de Senha",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{test_email}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/forgot-password",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "forgot-password"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code √© 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Mensagem de sucesso', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.message).to.include('enviado');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üë§ Usu√°rios",
      "item": [
        {
          "name": "Perfil do Usu√°rio",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/users/profile",
              "host": ["{{base_url}}"],
              "path": ["api", "users", "profile"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code √© 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Perfil cont√©m dados do usu√°rio', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('email');",
                  "    pm.expect(responseJson).to.have.property('name');",
                  "    pm.expect(responseJson).to.have.property('id');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Atualizar Perfil",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Nome Atualizado\",\n  \"bio\": \"Descri√ß√£o atualizada do perfil\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/users/profile",
              "host": ["{{base_url}}"],
              "path": ["api", "users", "profile"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code √© 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Perfil foi atualizado', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.name).to.eql('Nome Atualizado');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üèãÔ∏è Treinos",
      "item": [
        {
          "name": "Listar Treinos",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/workouts?page=0&size=10",
              "host": ["{{base_url}}"],
              "path": ["api", "workouts"],
              "query": [
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "10"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code √© 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Resposta √© uma lista paginada', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('content');",
                  "    pm.expect(responseJson).to.have.property('totalElements');",
                  "    pm.expect(responseJson).to.have.property('totalPages');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Criar Treino",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Treino Peito e Tr√≠ceps\",\n  \"description\": \"Treino focado em peito e tr√≠ceps\",\n  \"exercises\": [\n    {\n      \"exerciseId\": 1,\n      \"sets\": 4,\n      \"reps\": 12,\n      \"weight\": 70.0,\n      \"restTime\": 60\n    },\n    {\n      \"exerciseId\": 2,\n      \"sets\": 3,\n      \"reps\": 15,\n      \"weight\": 50.0,\n      \"restTime\": 45\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/workouts",
              "host": ["{{base_url}}"],
              "path": ["api", "workouts"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code √© 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Treino foi criado com sucesso', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('id');",
                  "    pm.expect(responseJson.name).to.eql('Treino Peito e Tr√≠ceps');",
                  "    pm.globals.set('workout_id', responseJson.id);",
                  "});",
                  "",
                  "pm.test('Exerc√≠cios foram associados', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.exercises).to.have.length(2);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Buscar Treino por ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/workouts/{{workout_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "workouts", "{{workout_id}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code √© 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Treino cont√©m dados completos', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('id');",
                  "    pm.expect(responseJson).to.have.property('name');",
                  "    pm.expect(responseJson).to.have.property('exercises');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Atualizar Treino",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Treino Peito e Tr√≠ceps - Atualizado\",\n  \"description\": \"Treino atualizado com novos exerc√≠cios\",\n  \"exercises\": [\n    {\n      \"exerciseId\": 1,\n      \"sets\": 5,\n      \"reps\": 10,\n      \"weight\": 75.0,\n      \"restTime\": 90\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/workouts/{{workout_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "workouts", "{{workout_id}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code √© 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Treino foi atualizado', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.name).to.include('Atualizado');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Deletar Treino",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/workouts/{{workout_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "workouts", "{{workout_id}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code √© 204', function () {",
                  "    pm.response.to.have.status(204);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üí™ Exerc√≠cios",
      "item": [
        {
          "name": "Listar Exerc√≠cios",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/exercises",
              "host": ["{{base_url}}"],
              "path": ["api", "exercises"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code √© 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Lista cont√©m exerc√≠cios', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.be.an('array');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Buscar Exerc√≠cio por ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/exercises/1",
              "host": ["{{base_url}}"],
              "path": ["api", "exercises", "1"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code √© 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Exerc√≠cio cont√©m dados completos', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('id');",
                  "    pm.expect(responseJson).to.have.property('name');",
                  "    pm.expect(responseJson).to.have.property('muscleGroup');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üìä Estat√≠sticas",
      "item": [
        {
          "name": "Dashboard do Usu√°rio",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/dashboard",
              "host": ["{{base_url}}"],
              "path": ["api", "dashboard"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code √© 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Dashboard cont√©m estat√≠sticas', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('totalWorkouts');",
                  "    pm.expect(responseJson).to.have.property('thisWeekWorkouts');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üîß Sistema",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/actuator/health",
              "host": ["{{base_url}}"],
              "path": ["actuator", "health"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code √© 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Aplica√ß√£o est√° saud√°vel', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.status).to.eql('UP');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Informa√ß√µes da Aplica√ß√£o",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/actuator/info",
              "host": ["{{base_url}}"],
              "path": ["actuator", "info"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code √© 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Cont√©m informa√ß√µes da aplica√ß√£o', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('app');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Verificar se h√° token JWT dispon√≠vel",
          "const jwtToken = pm.globals.get('jwt_token');",
          "if (jwtToken) {",
          "    pm.request.headers.add({",
          "        key: 'Authorization',",
          "        value: `Bearer ${jwtToken}`",
          "    });",
          "}"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Teste global para tempo de resposta",
          "pm.test('Tempo de resposta √© aceit√°vel', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(2000);",
          "});",
          "",
          "// Teste global para headers de seguran√ßa",
          "pm.test('Headers de seguran√ßa presentes', function () {",
          "    pm.expect(pm.response.headers.get('X-Content-Type-Options')).to.eql('nosniff');",
          "});"
        ]
      }
    }
  ]
} 